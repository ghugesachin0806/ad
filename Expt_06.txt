#include <stdint.h>
#include <stdio.h>

// Define the base address of NVMe controller registers (example address)
#define NVME_REG_BASE 0x10000000

// Define offsets for doorbell registers
#define SUBMISSION_QUEUE_DB_OFFSET 0x1000
#define COMPLETION_QUEUE_DB_OFFSET 0x2000

// Function to write to a memory-mapped register
void write_mmio(uint64_t addr, uint32_t value) {
    *((volatile uint32_t *)addr) = value;
}

// Function to read from a memory-mapped register
uint32_t read_mmio(uint64_t addr) {
    return *((volatile uint32_t *)addr);
}

// Function to notify the controller of a new command
void notify_submission_queue(uint16_t queue_id, uint16_t new_tail) {
    uint64_t db_addr = NVME_REG_BASE + SUBMISSION_QUEUE_DB_OFFSET + (queue_id * 8);
    write_mmio(db_addr, new_tail);
}

// Function to notify the host of a completed command
void notify_completion_queue(uint16_t queue_id, uint16_t new_head) {
    uint64_t db_addr = NVME_REG_BASE + COMPLETION_QUEUE_DB_OFFSET + (queue_id * 8);
    write_mmio(db_addr, new_head);
}

int main() {
    uint16_t submission_queue_id = 1;
    uint16_t submission_queue_tail = 5; // Example value

    uint16_t completion_queue_id = 1;
    uint16_t completion_queue_head = 3; // Example value

    // Notify NVMe controller of a new command
    notify_submission_queue(submission_queue_id, submission_queue_tail);

    // Notify the host of a completed command
    notify_completion_queue(completion_queue_id, completion_queue_head);

    printf("Submission and completion notifications sent.\n");

    return 0;
}